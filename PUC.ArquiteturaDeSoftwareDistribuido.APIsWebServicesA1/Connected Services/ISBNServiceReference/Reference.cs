//------------------------------------------------------------------------------
// <auto-generated>
//     Esse código foi gerado por uma ferramenta.
//
//     As alterações no arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ISBNServiceReference
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://webservices.daehosting.com/ISBN", ConfigurationName="ISBNServiceReference.ISBNServiceSoapType")]
    public interface ISBNServiceSoapType
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<ISBNServiceReference.IsValidISBN13Response> IsValidISBN13Async(ISBNServiceReference.IsValidISBN13Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<ISBNServiceReference.IsValidISBN10Response> IsValidISBN10Async(ISBNServiceReference.IsValidISBN10Request request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IsValidISBN13Request
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IsValidISBN13", Namespace="http://webservices.daehosting.com/ISBN", Order=0)]
        public ISBNServiceReference.IsValidISBN13RequestBody Body;
        
        public IsValidISBN13Request()
        {
        }
        
        public IsValidISBN13Request(ISBNServiceReference.IsValidISBN13RequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.daehosting.com/ISBN")]
    public partial class IsValidISBN13RequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sISBN;
        
        public IsValidISBN13RequestBody()
        {
        }
        
        public IsValidISBN13RequestBody(string sISBN)
        {
            this.sISBN = sISBN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IsValidISBN13Response
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IsValidISBN13Response", Namespace="http://webservices.daehosting.com/ISBN", Order=0)]
        public ISBNServiceReference.IsValidISBN13ResponseBody Body;
        
        public IsValidISBN13Response()
        {
        }
        
        public IsValidISBN13Response(ISBNServiceReference.IsValidISBN13ResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.daehosting.com/ISBN")]
    public partial class IsValidISBN13ResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool IsValidISBN13Result;
        
        public IsValidISBN13ResponseBody()
        {
        }
        
        public IsValidISBN13ResponseBody(bool IsValidISBN13Result)
        {
            this.IsValidISBN13Result = IsValidISBN13Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IsValidISBN10Request
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IsValidISBN10", Namespace="http://webservices.daehosting.com/ISBN", Order=0)]
        public ISBNServiceReference.IsValidISBN10RequestBody Body;
        
        public IsValidISBN10Request()
        {
        }
        
        public IsValidISBN10Request(ISBNServiceReference.IsValidISBN10RequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.daehosting.com/ISBN")]
    public partial class IsValidISBN10RequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sISBN;
        
        public IsValidISBN10RequestBody()
        {
        }
        
        public IsValidISBN10RequestBody(string sISBN)
        {
            this.sISBN = sISBN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IsValidISBN10Response
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IsValidISBN10Response", Namespace="http://webservices.daehosting.com/ISBN", Order=0)]
        public ISBNServiceReference.IsValidISBN10ResponseBody Body;
        
        public IsValidISBN10Response()
        {
        }
        
        public IsValidISBN10Response(ISBNServiceReference.IsValidISBN10ResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://webservices.daehosting.com/ISBN")]
    public partial class IsValidISBN10ResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool IsValidISBN10Result;
        
        public IsValidISBN10ResponseBody()
        {
        }
        
        public IsValidISBN10ResponseBody(bool IsValidISBN10Result)
        {
            this.IsValidISBN10Result = IsValidISBN10Result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public interface ISBNServiceSoapTypeChannel : ISBNServiceReference.ISBNServiceSoapType, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public partial class SBNServiceSoapTypeClient : System.ServiceModel.ClientBase<ISBNServiceReference.ISBNServiceSoapType>, ISBNServiceReference.ISBNServiceSoapType
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar o ponto de extremidade de serviço.
        /// </summary>
        /// <param name="serviceEndpoint">O ponto de extremidade a ser configurado</param>
        /// <param name="clientCredentials">As credenciais do cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public SBNServiceSoapTypeClient(EndpointConfiguration endpointConfiguration) : 
                base(SBNServiceSoapTypeClient.GetBindingForEndpoint(endpointConfiguration), SBNServiceSoapTypeClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SBNServiceSoapTypeClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(SBNServiceSoapTypeClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SBNServiceSoapTypeClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(SBNServiceSoapTypeClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SBNServiceSoapTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ISBNServiceReference.IsValidISBN13Response> ISBNServiceReference.ISBNServiceSoapType.IsValidISBN13Async(ISBNServiceReference.IsValidISBN13Request request)
        {
            return base.Channel.IsValidISBN13Async(request);
        }
        
        public System.Threading.Tasks.Task<ISBNServiceReference.IsValidISBN13Response> IsValidISBN13Async(string sISBN)
        {
            ISBNServiceReference.IsValidISBN13Request inValue = new ISBNServiceReference.IsValidISBN13Request();
            inValue.Body = new ISBNServiceReference.IsValidISBN13RequestBody();
            inValue.Body.sISBN = sISBN;
            return ((ISBNServiceReference.ISBNServiceSoapType)(this)).IsValidISBN13Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ISBNServiceReference.IsValidISBN10Response> ISBNServiceReference.ISBNServiceSoapType.IsValidISBN10Async(ISBNServiceReference.IsValidISBN10Request request)
        {
            return base.Channel.IsValidISBN10Async(request);
        }
        
        public System.Threading.Tasks.Task<ISBNServiceReference.IsValidISBN10Response> IsValidISBN10Async(string sISBN)
        {
            ISBNServiceReference.IsValidISBN10Request inValue = new ISBNServiceReference.IsValidISBN10Request();
            inValue.Body = new ISBNServiceReference.IsValidISBN10RequestBody();
            inValue.Body.sISBN = sISBN;
            return ((ISBNServiceReference.ISBNServiceSoapType)(this)).IsValidISBN10Async(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ISBNServiceSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.ISBNServiceSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Não foi possível encontrar o ponto de extremidade com o nome \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ISBNServiceSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://webservices.daehosting.com/services/isbnservice.wso");
            }
            if ((endpointConfiguration == EndpointConfiguration.ISBNServiceSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://webservices.daehosting.com/services/isbnservice.wso");
            }
            throw new System.InvalidOperationException(string.Format("Não foi possível encontrar o ponto de extremidade com o nome \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            ISBNServiceSoap,
            
            ISBNServiceSoap12,
        }
    }
}
